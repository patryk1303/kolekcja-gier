---
type Props = {
  platform?: string | boolean;
};
import readXlsxFile, { type Row } from "read-excel-file/node";
import DataTable from "./DataTable/DataTable.svelte";
import type { TGameRow } from "../@types/TGame";

const { platform } = Astro.props;

const rows: Row[] = await readXlsxFile("./src/Spis gier 2024.xlsx");
const gameRows: TGameRow[] = rows
  .slice(1) // from 2nd row
  .filter((row) => row[1]) // where name is specified
  .filter((row) =>
    typeof platform === "string"
      ? (row[3] as string).toLowerCase().startsWith(platform.toLowerCase())
      : true
  ) // where platform matches
  .map((row) => row.map((cell: null | string) => (cell === null ? "" : cell)))
  .map((row, rowIdx) => ({
    number: rowIdx + 1,
    title: row[1],
    media: row[2],
    platform: row[3],
    status: row[4],
    notes: row[5],
  }));
---

<DataTable client:visible data={gameRows} />
